/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.LinkedList;
import java.util.Random;
import javax.swing.JOptionPane;

import student.Student;
//import studentImp.StudentImp;

/**
 * @author ITS
 */
public class FStudent extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    
    private LinkedList<Student> list = new LinkedList<Student>();
    private Random random = new Random();
    
    public FStudent() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        labName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        labAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtClass = new javax.swing.JTextField();
        labAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        labClass = new javax.swing.JLabel();
        labClass1 = new javax.swing.JLabel();
        radFemale = new javax.swing.JRadioButton();
        radMale = new javax.swing.JRadioButton();
        labNationality = new javax.swing.JLabel();
        txtNationality = new javax.swing.JTextField();
        txtMotherName = new javax.swing.JTextField();
        labFatherName = new javax.swing.JLabel();
        txtFatherName = new javax.swing.JTextField();
        labPhoneFather = new javax.swing.JLabel();
        labMotherName = new javax.swing.JLabel();
        txtPhoneFather = new javax.swing.JTextField();
        labProfession = new javax.swing.JLabel();
        labBirthDay = new javax.swing.JLabel();
        txtPlaceBirth = new javax.swing.JTextField();
        labPlaceBirth = new javax.swing.JLabel();
        txtProfession = new javax.swing.JTextField();
        txtCardFather = new javax.swing.JTextField();
        labCardFather = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        calBirthDay = new com.toedter.calendar.JDateChooser();
        javax.swing.JLabel labAddressPage = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Student Add"); // NOI18N

        labName.setForeground(new java.awt.Color(0, 0, 0));
        labName.setText("Name:");

        labAge.setForeground(new java.awt.Color(0, 0, 0));
        labAge.setText("age:");

        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });

        txtClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassActionPerformed(evt);
            }
        });

        labAddress.setForeground(new java.awt.Color(0, 0, 0));
        labAddress.setText("Address:");

        labClass.setForeground(new java.awt.Color(0, 0, 0));
        labClass.setText("Class:");

        labClass1.setForeground(new java.awt.Color(0, 0, 0));
        labClass1.setText("Gender:");

        radFemale.setText("Female");
        radFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFemaleActionPerformed(evt);
            }
        });

        radMale.setSelected(true);
        radMale.setText("Male");
        radMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMaleActionPerformed(evt);
            }
        });

        labNationality.setForeground(new java.awt.Color(0, 0, 0));
        labNationality.setText("Nationality:");

        txtNationality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNationalityActionPerformed(evt);
            }
        });

        txtMotherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotherNameActionPerformed(evt);
            }
        });

        labFatherName.setForeground(new java.awt.Color(0, 0, 0));
        labFatherName.setText("Father Name:");

        labPhoneFather.setForeground(new java.awt.Color(0, 0, 0));
        labPhoneFather.setText("Phone Father:");

        labMotherName.setForeground(new java.awt.Color(0, 0, 0));
        labMotherName.setText("Mother Name:");

        txtPhoneFather.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneFatherActionPerformed(evt);
            }
        });
        txtPhoneFather.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneFatherKeyTyped(evt);
            }
        });

        labProfession.setForeground(new java.awt.Color(0, 0, 0));
        labProfession.setText("Profession Father:");

        labBirthDay.setForeground(new java.awt.Color(0, 0, 0));
        labBirthDay.setText("Birthday:");

        labPlaceBirth.setForeground(new java.awt.Color(0, 0, 0));
        labPlaceBirth.setText("Place Birth:");

        txtProfession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfessionActionPerformed(evt);
            }
        });

        txtCardFather.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCardFatherActionPerformed(evt);
            }
        });
        txtCardFather.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCardFatherKeyTyped(evt);
            }
        });

        labCardFather.setForeground(new java.awt.Color(0, 0, 0));
        labCardFather.setText("Card Father:");

        btnAdd.setText("ADD");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        calBirthDay.setToolTipText("");
        calBirthDay.setDate(Date.from(LocalDate.now().atStartOfDay(ZoneId.systemDefault()).toInstant()));

        labAddressPage.setForeground(new java.awt.Color(0, 0, 0));
        labAddressPage.setText("Student");
        labAddressPage.setMaximumSize(new java.awt.Dimension(180, 180));
        labAddressPage.setMinimumSize(new java.awt.Dimension(150, 150));

        btnRemove.setText("REMOVE");
        btnRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnPrint.setText("PRINT");
        btnPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labClass)
                            .addComponent(labName)
                            .addComponent(labAge)
                            .addComponent(labAddress))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtClass, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labMotherName)
                            .addComponent(labBirthDay)
                            .addComponent(labPlaceBirth)
                            .addComponent(labFatherName))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPlaceBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFatherName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMotherName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labNationality)
                        .addGap(19, 19, 19)
                        .addComponent(txtNationality, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labClass1)
                                .addGap(43, 43, 43)
                                .addComponent(radMale)
                                .addGap(18, 18, 18)
                                .addComponent(radFemale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labProfession)
                                    .addComponent(labPhoneFather)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(labCardFather)
                                .addGap(19, 19, 19)
                                .addComponent(txtCardFather, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPhoneFather)
                            .addComponent(txtProfession, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(labAddressPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(53, 53, 53)
                .addComponent(btnRemove)
                .addGap(60, 60, 60)
                .addComponent(btnUpdate)
                .addGap(60, 60, 60)
                .addComponent(btnPrint)
                .addGap(145, 145, 145))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labAddressPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labBirthDay))
                        .addGap(22, 22, 22)))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labPlaceBirth)
                            .addComponent(txtPlaceBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labFatherName)
                            .addComponent(txtFatherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labMotherName)
                        .addComponent(txtMotherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labClass)
                        .addComponent(txtClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labProfession)
                        .addComponent(txtProfession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labClass1)
                        .addComponent(radFemale)
                        .addComponent(radMale)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labNationality)
                    .addComponent(txtPhoneFather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labPhoneFather))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCardFather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labCardFather))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove)
                    .addComponent(btnPrint)
                    .addComponent(btnUpdate))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassActionPerformed

    private void radFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFemaleActionPerformed
        if (radMale.isSelected()) {
            radMale.setSelected(false);
        }
    }//GEN-LAST:event_radFemaleActionPerformed

    private void radMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMaleActionPerformed
        if (radFemale.isSelected()) {
            radFemale.setSelected(false);
        }
    }//GEN-LAST:event_radMaleActionPerformed

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) | txtAge.getText().length() == 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAgeKeyTyped

    private void txtNationalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNationalityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNationalityActionPerformed

    private void txtMotherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotherNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotherNameActionPerformed

    private void txtPhoneFatherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneFatherActionPerformed

    }//GEN-LAST:event_txtPhoneFatherActionPerformed

    private void txtProfessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfessionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfessionActionPerformed

    private void txtPhoneFatherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneFatherKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) | txtPhoneFather.getText().length() == 9) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPhoneFatherKeyTyped

    private void txtCardFatherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCardFatherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCardFatherActionPerformed

    private void txtCardFatherKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCardFatherKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) | txtCardFather.getText().length() == 11) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCardFatherKeyTyped

    private void add (boolean update){
        Student student = new Student();
        student.setName(txtName.getText().trim());
        if (!student.getName().isEmpty()) {
            if (!txtAge.getText().trim().isEmpty()) {
                student.setAge(Integer.parseInt(txtAge.getText().trim()));
                student.setAddress(txtAddress.getText().trim());
                if (!student.getAddress().isEmpty()) {
                    student.setClassSchool(txtClass.getText().trim());
                    if (!student.getClassSchool().isEmpty()) {
                        student.setGender(radMale.isSelected());
                        student.setNationality(txtNationality.getText().trim());
                        if (!student.getNationality().isEmpty()) {
                            student.setBirthday(calBirthDay.getDate().toString());
                            student.setPlaceBirth(txtPlaceBirth.getText().trim());
                            if (!student.getPlaceBirth().isEmpty()) {
                                student.setFatherName(txtFatherName.getText().trim());
                                if (!student.getFatherName().isEmpty()) {
                                    student.setMotherName(txtMotherName.getText().trim());
                                    if (!student.getMotherName().isEmpty()){
                                    student.setProfession(txtProfession.getText().trim());
                                    if (!student.getProfession().isEmpty()) {
                                        if (txtPhoneFather.getText().matches("^(77|78|71|73)\\d{7}$")) {
                                            student.setNumberPhoneFather(Integer.parseInt(txtPhoneFather.getText()));
                                            if (txtCardFather.getText().matches("^(01)\\d{9}$")){
                                                student.setNumberCardFather(Integer.parseInt(txtCardFather.getText()));
                                                if (!update){
                                                    long id = 0;
                                                    boolean repeat = false;
                                                    do {
                                                        long lId = random.nextLong(1000000)+1;
                                                        if (list.size() == 1000000){
                                                            break;
                                                        }
                                                        if (!list.stream().noneMatch(x -> x.getId() == lId)){
                                                            repeat = true;
                                                        } else {
                                                            id = lId;
                                                            repeat = false;
                                                        }
                                                    } while (repeat);
                                                    student.setId(id);
                                                    list.add(student);
                                                    System.out.println(id);
                                                } else {
                                                    try{
                                                        long id = Long.parseLong(JOptionPane.showInputDialog("Enter id student:").trim());
                                                        Student byId = getById(id);
                                                        if (byId != null){
                                                            list.set(list.indexOf(byId), student);
                                                            list.forEach(System.out::println);
                                                        } else {
                                                            JOptionPane.showMessageDialog(this, "This's, id not found");
                                                        }
                                                    } catch (NumberFormatException e){
                                                        JOptionPane.showMessageDialog(this, "Please, Enter number");
                                                    }
                                                }
                                                txtName.setText("");
                                                txtAge.setText("");
                                                txtNationality.setText("");
                                                txtAddress.setText("");
                                                txtCardFather.setText("");
                                                txtFatherName.setText("");
                                                txtMotherName.setText("");
                                                txtClass.setText("");
                                                txtPlaceBirth.setText("");
                                                txtPhoneFather.setText("");
                                                txtProfession.setText("");
                                                calBirthDay.setDate(Date.from(LocalDate.now().atStartOfDay(ZoneId.systemDefault()).toInstant()));
                                                radMale.setSelected(true);
                                            } else {
                                                txtCardFather.requestFocus();
                                                JOptionPane.showMessageDialog(this, "This's, card number father failed please rewrite number");
                                            }
                                        } else {
                                            txtPhoneFather.requestFocus();
                                            JOptionPane.showMessageDialog(this, "This's, number phone father failed please rewrite number");
                                        }
                                    } else {
                                        txtProfession.requestFocus();
                                        JOptionPane.showMessageDialog(this, "Please, enter profession father");
                                    }
                                    } else {
                                        txtMotherName.requestFocus();
                                        JOptionPane.showMessageDialog(this, "Please, enter mother name student");
                                    }
                                } else {
                                    txtFatherName.requestFocus();
                                    JOptionPane.showMessageDialog(this, "Please, enter father name student");
                                }
                            } else {
                                txtPlaceBirth.requestFocus();
                                JOptionPane.showMessageDialog(this, "Please, enter place birth student");
                            }
                        } else {
                            txtNationality.requestFocus();
                            JOptionPane.showMessageDialog(this, "Please, enter nationality student");
                        }
                    } else {
                        txtClass.requestFocus();
                        JOptionPane.showMessageDialog(this, "Please, enter class student");
                    }
                } else {
                    txtAddress.requestFocus();
                    JOptionPane.showMessageDialog(this, "Please, enter address student");
                }
            } else {
                txtAge.requestFocus();
                JOptionPane.showMessageDialog(this, "Please, enter age student");
            }
        } else {
            txtName.requestFocus();
            JOptionPane.showMessageDialog(this, "Please, enter name student");
        }
    }
    private Student getById(long id){
        return list.stream().filter(x -> x.getId() == id).findFirst().orElse(null);
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        add(false);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if (list.size() > 0){
            while (true){
                try{
                    long id = Long.parseLong(JOptionPane.showInputDialog("Enter id student:\nIf you exit enter 0:").trim());
                    if (list.removeIf(x -> x.getId() == id)){
                        JOptionPane.showMessageDialog(this, "Successfly Delete student");
                        System.out.println("_____________________________________________");
                        list.forEach(System.out::println);
                        break;
                    } else if (id == 0) {
                        break;
                    }else {
                        JOptionPane.showMessageDialog(this, "This's Id not found");
                        break;
                    }
                } catch (NumberFormatException e){
                    JOptionPane.showMessageDialog(this, "Please, Enter number id");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Not, found data");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        if (list.size() > 0){
            String storage = "";
            for (Student read : list){
                storage += read + "\n";
            }
            JOptionPane.showMessageDialog(this, storage);
        } else {
            JOptionPane.showMessageDialog(this, "Not, found data");
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (list.size() > 0){
           add(true);
        } else {
           JOptionPane.showMessageDialog(this, "Not, found data");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private com.toedter.calendar.JDateChooser calBirthDay;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel labAddress;
    private javax.swing.JLabel labAge;
    private javax.swing.JLabel labBirthDay;
    private javax.swing.JLabel labCardFather;
    private javax.swing.JLabel labClass;
    private javax.swing.JLabel labClass1;
    private javax.swing.JLabel labFatherName;
    private javax.swing.JLabel labMotherName;
    private javax.swing.JLabel labName;
    private javax.swing.JLabel labNationality;
    private javax.swing.JLabel labPhoneFather;
    private javax.swing.JLabel labPlaceBirth;
    private javax.swing.JLabel labProfession;
    private javax.swing.JRadioButton radFemale;
    private javax.swing.JRadioButton radMale;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCardFather;
    private javax.swing.JTextField txtClass;
    private javax.swing.JTextField txtFatherName;
    private javax.swing.JTextField txtMotherName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNationality;
    private javax.swing.JTextField txtPhoneFather;
    private javax.swing.JTextField txtPlaceBirth;
    private javax.swing.JTextField txtProfession;
    // End of variables declaration//GEN-END:variables
}
